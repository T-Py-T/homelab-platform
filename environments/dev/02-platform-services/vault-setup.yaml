# Vault Configuration for External Secrets Integration

# ServiceAccount for External Secrets to authenticate with Vault
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-auth
  namespace: external-secrets-system

---
# ClusterRoleBinding for Vault authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: vault-auth
  namespace: external-secrets-system

---
# Vault Auth Method Configuration Job
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-setup
  namespace: vault
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-setup
        image: hashicorp/vault:1.15.2
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: VAULT_TOKEN
          value: "dev-only-token"  # Only for dev environment
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status; do
            echo "Waiting for Vault..."
            sleep 5
          done
          
          # Enable KV secrets engine if not already enabled
          vault secrets list | grep -q "secret/" || vault secrets enable -path=secret kv-v2
          
          # Enable Kubernetes auth method if not already enabled
          vault auth list | grep -q "kubernetes/" || vault auth enable kubernetes
          
          # Configure Kubernetes auth method
          vault write auth/kubernetes/config \
            token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
            kubernetes_host="https://kubernetes.default.svc:443" \
            kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          
          # Create policy for external secrets
          vault policy write external-secrets-policy - <<EOF
          path "secret/data/*" {
            capabilities = ["read"]
          }
          path "secret/metadata/*" {
            capabilities = ["list", "read"]
          }
          EOF
          
          # Create Kubernetes auth role
          vault write auth/kubernetes/role/external-secrets \
            bound_service_account_names=vault-auth \
            bound_service_account_namespaces=external-secrets-system \
            policies=external-secrets-policy \
            ttl=24h
          
          echo "Vault auth setup completed successfully!"
          echo "NOTE: You must manually add secrets to Vault at the following paths:"
          echo "- secret/data/homelab/postgresql"
          echo "- secret/data/homelab/redis" 
          echo "- secret/data/homelab/applications"
          echo "- secret/data/homelab/n8n"
          echo "- secret/data/homelab/wallabag"
          echo "- secret/data/homelab/linkding"
          echo "- secret/data/homelab/keycloak"
          echo "- secret/data/homelab/grafana"
      restartPolicy: OnFailure